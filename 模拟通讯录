//头文件Contact.h
#ifndef _CONTACT_H_
#define _CONTACT_H_
#define _CRT_SECURE_NO_WARNINGS 1
#include<assert.h>
#include<stdio.h>
#include<string.h>

enum Option//枚举常量
{
	EXIT,//0
	ADD,//1
	SEAR,//2
	DEL,//3
	SHOW,//4
	CLEAR,//5
	SORT,//6
	DESTROY//7
};
//定义常量
#define MAX_NAME 20
#define MAX_TEL 11
#define MAX_ADDR 20
#define MAX_SEX 20
#define MAX_NUMPERSON 1002
//定义结构体
typedef struct PersonInfo
{
	char name[MAX_NAME];
	short age;
	char tele[MAX_TEL];
	char addr[MAX_ADDR];
	char sex[MAX_SEX];
}PersonInfo;

//通讯录
typedef struct Contact
{
	PersonInfo per[MAX_NUMPERSON];
	int usedSize;//被使用的个数
}Contact;

//函数声明
void InitContact(Contact *pCon);
void AddContact(Contact *pCon);
int SearchContact(Contact *pCon);//找到返回下标，找不到返回-1
void DelContact(Contact *pCon);
void ShowContact(Contact *pCon);
void ClearContact(Contact *pCon);
void SortContact(Contact *pCon);
void ModityContact(Contact *pCon);
void DestroyContact(Contact *pCon);
#endif


//contact.c
#include "Contact.h"//引用头文件
//初始化函数
void InitContact(Contact *pCon)
{
	assert(pCon != NULL);
	pCon->usedSize = 0;
	memset(pCon->per,0,sizeof(pCon->per));
}

//添加联系人函数
void AddContact(Contact *pCon)
{
	if (pCon->usedSize == MAX_NUMPERSON)
	{
		printf("不好意思，通讯录已满\n");
		return;
	}
	printf("请输入姓名：");
	scanf("%s", pCon->per[pCon->usedSize].name);
	printf("请输入性别：");
	scanf("%s", pCon->per[pCon->usedSize].sex);
	printf("请输入年龄：");
	scanf("%d", &pCon->per[pCon->usedSize].age);
	printf("请输入电话：");
	scanf("%s", pCon->per[pCon->usedSize].tele);
	printf("请输入地址：");
	scanf("%s", pCon->per[pCon->usedSize].addr);
	pCon->usedSize++;
	printf("添加成功\n");

}

//查找联系人函数
int SearchContact(Contact *pCon)
{
	
	char name[MAX_NAME];
	if (pCon->usedSize == 0)
	{
		printf("通讯录为空 \n");
		return -1;
	}
	printf("请输入姓名：");
	scanf("%s", name);
	for (int i = 0; i < pCon->usedSize; i++)
	{
		if (strcmp(pCon->per[i].name, name) == 0)
		{
			return i;
		}
		return -1;
	}
	return -1;
}

//删除函数
void DelContact(Contact *pCon)
{
	int index = SearchContact(pCon);
	if (index == -1)
	{
		printf("查无此人\n");
		return;
	}
	//删除
	for (int i = index; i < pCon->usedSize-1; i++)
	{
		pCon->per[i] = pCon->per[i + 1];
	}
	pCon->usedSize--;
	printf("删除成功\n");
}

//展示通讯录函数
void ShowContact(Contact *pCon)
{
	int i = 0;
	printf("%-20s%-10s%-10s%-11s%-15s\n", "姓名", "性别", "年龄", "电话", "地址");
	for (i = 0; i < pCon->usedSize; i++)
	{
		printf("%-20s%-10s%-10d%-11s%-15s\n", pCon->per[i].name, pCon->per[i].sex, 
			pCon->per[i].age, pCon->per[i].tele, pCon->per[i].addr);
	}
}

//清空通讯录函数
void ClearContact(Contact *pCon)
{
	pCon->usedSize = 0;
	printf("通讯录已清空\n");
}

//按名字进行联系人排序函数
void SortContact(Contact *pCon)
{
	int i = 0;
	int j = 0;
	int flg = 0;
	for (i = 0; i < pCon->usedSize - 1; i++)
	{
		flg = 0;
		for (j = 0; j < pCon->usedSize - i - 1; j++)
		{
			if (strcmp(pCon->per[j].name, pCon->per[j + 1].name) > 0)
			{
				pCon->per[1001] = pCon->per[j];
				pCon->per[j] = pCon->per[j + 1];
				pCon->per[j + 1] = pCon->per[1001];
			}
			flg = 1;
		}
		if (flg == 0)
		{
			break;
		}
	}
}


//test.c
#include "Contact.h"
void menu()
{
	printf("**** 1.add   ***** 2.search ******\n");
	printf("**** 3.del   ***** 4.show   ******\n");
	printf("**** 5.clear ***** 6.sort   ******\n");
	printf("**** 0.exit  *********************\n");
}
void start()
{
	int input = 0;
	Contact con;
	//初始化通讯录数组
	InitContact(&con);
	do{
		menu();
		printf("请输入你的操作：");
		scanf("%d", &input);
		switch (input)
		{
		case ADD:
			AddContact(&con);
			break;
		case SEAR:
			SearchContact(&con);
			break;
		case DEL:
			DelContact(&con);
			break;
		case SHOW:
			ShowContact(&con);
			break;
		case CLEAR:
			ClearContact(&con);
			break;
		case SORT:
			SortContact(&con);
			break;
                case MODITY:
			ModityContact(&con);
			break;
		}
	} while (input);
}
//主函数
int main()
{
	start();
	return 0;
}
